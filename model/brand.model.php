<?phpdefined('haipinlegou') or exit('Access Invalid!');class brandModel{		public function getBrandList($condition,$page=''){		$condition_str = $this->_condition($condition);		$param = array();		$param['table'] = 'brand';		$param['order'] = $condition['order'] ? $condition['order'] : 'brand_sort';		$param['where'] = $condition_str;		$param['field'] = $condition['field'];		$param['group'] = $condition['group'];		$param['limit'] = $condition['limit'];		$result = Db::select($param,$page);				return $result;	}			private function _condition($condition){		$condition_str = '';				if ($condition['brand_class'] != ''){			$condition_str .= " and brand_class = '". $condition['brand_class'] ."'";		}		if ($condition['brand_recommend'] != ''){			$condition_str .= " and brand_recommend = '". intval($condition['brand_recommend']) ."'";		}		if ($condition['no_brand_id'] != ''){			$condition_str .= " and brand_id != '". intval($condition['no_brand_id']) ."'";		}		if ($condition['brand_id'] != ''){			$condition_str .= " and brand_id = '". intval($condition['brand_id']) ."'";		}		if ($condition['no_in_brand_id'] != ''){			$condition_str .= " and brand_id NOT IN( ". $condition['no_in_brand_id'] ." )";		}		if ($condition['brand_name'] != ''){			$condition_str .= " and brand_name = '". $condition['brand_name'] ."'";		}		if ($condition['like_brand_name'] != ''){			$condition_str .= " and brand_name like '%". $condition['like_brand_name'] ."%'";		}		if ($condition['like_brand_class'] != ''){			$condition_str .= " and brand_class like '%". $condition['like_brand_class'] ."%'";		}		if ($condition['brand_apply'] != ''){			$condition_str .= " and brand_apply = '". $condition['brand_apply'] ."'";		}		if($condition['storeid_equal'] != '') {			$condition_str	.= " and store_id = '{$condition['storeid_equal']}'";		}		if($condition['store_id'] != ''){			$condition_str	.= " and store_id in(".$condition['store_id'].")";		}		return $condition_str;	}			public function getOneBrand($brand_id){		if (intval($brand_id) > 0){			$param = array();			$param['table'] = 'brand';			$param['field'] = 'brand_id';			$param['value'] = intval($brand_id);			$result = Db::getRow($param);			return $result;		}else {			return false;		}	}			public function add($param){		if (empty($param)){			return false;		}		if (is_array($param)){			$tmp = array();			foreach ($param as $k => $v){				$tmp[$k] = $v;			}			$result = Db::insert('brand',$tmp);			return $result;		}else {			return false;		}	}			public function update($param){		if (empty($param)){			return false;		}		if (is_array($param)){			$tmp = array();			foreach ($param as $k => $v){				$tmp[$k] = $v;			}			$where = " brand_id = '". $param['brand_id'] ."'";			$result = Db::update('brand',$tmp,$where);			return $result;		}else {			return false;		}	}			public function del($id){		if (intval($id) > 0){			$where = " brand_id = '". intval($id) ."'";			$result = Db::delete('brand',$where);			return $result;		}else {			return false;		}	}    /**     * @param $param=[]     */    public function getBrands($param,$type='')    {        $condtion=[];        switch($type){            case 'join':                $condtion['filed']='*';                $condtion['table']=$param['table'];                $condtion['join_type']=$param['join_type'];                $condtion['join_on']=$param['join_on'];                $condtion['where']=$param['where'];                break;            default:                $condtion['filed']="*";                $condtion['table']=$param['table'];                $condtion['where']=$param['where'];                break;        }        if(!empty($condtion)){            return Db::select($condtion);        }    }}