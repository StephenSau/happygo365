<?php defined('haipinlegou') or exit('Access Invalid!');class voucherModel extends Model {	private $applystate_arr;    private $quotastate_arr;    private $templatestate_arr;    	public function __construct(){		parent::__construct();				$this->applystate_arr = array('new'=>array(1,Language::get('voucher_applystate_new')),'verify'=>array(2,Language::get('voucher_applystate_verify')),'cancel'=>array(3,Language::get('voucher_applystate_cancel')));		$this->quotastate_arr = array('activity'=>array(1,Language::get('voucher_quotastate_activity')),'cancel'=>array(2,Language::get('voucher_quotastate_cancel')),'expire'=>array(3,Language::get('voucher_quotastate_expire')));		$this->templatestate_arr = array('usable'=>array(1,Language::get('voucher_templatestate_usable')),'disabled'=>array(2,Language::get('voucher_templatestate_disabled')));			}		public function getCurrentQuota($store_id){		$store_id = intval($store_id);		if($store_id <= 0){			return false;		}        $param = array();        $param['quota_storeid'] = $store_id;        $param['quota_starttime'] = array('lt',time());        $param['quota_endtime'] = array('gt',time());        $param['quota_state'] = $this->quotastate_arr['activity'][0];        $info = $this->table('voucher_quota')->where($param)->find();        return $info;	}		public function getNewApply($store_id){		$store_id = intval($store_id);		if($store_id <= 0){			return false;		}		$new_apply = $this->table('voucher_apply')->where(array('apply_storeid'=>$store_id,'apply_state'=>$this->applystate_arr['new'][0]))->find();		$newapply_flag = false;        if(!empty($new_apply)){        	$newapply_flag = true;        }        return $newapply_flag;	}		public function getUsableTemplateInfo($vid){		if (empty($vid)){			return array();		}		$field = 'voucher_template.*,store.store_id,store.store_label,store.store_name,store.store_domain';		$on = 'voucher_template.voucher_t_store_id=store.store_id';		$voucher_info = $this->table('voucher_template,store')->field($field)->join('left')->on($on)->where(array('voucher_t_id'=>$vid,'voucher_t_state'=>$this->templatestate_arr['usable'][0],'voucher_t_end_date'=>array('gt',time())))->find();		if (empty($voucher_info) || $voucher_info['voucher_t_total']<=$voucher_info['voucher_t_giveout']){			$voucher_info = array();		}		return $voucher_info;	}	    public function get_voucher_code() {        return date('Ymd').substr(implode(NULL,array_map('ord',str_split(substr(uniqid(),7,13),1))) , -8 , 8);    }    /**     * 更改代金券状态（应用场景：取消订单返回代金券）     * @param array $param     * @param int $voucher_id     * @return bool     */    public function updateVoucherState($param,$voucher_id)    {        if(!empty($param) && is_array($param)) {            $where = " voucher_id = ".$voucher_id;            return Db::update('voucher',$param,$where);        }        return false;    }}